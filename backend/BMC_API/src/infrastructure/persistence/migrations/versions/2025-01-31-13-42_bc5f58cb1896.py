"""empty message

Revision ID: bc5f58cb1896
Revises: 4ad25203924f
Create Date: 2025-01-31 13:42:05.800695

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "bc5f58cb1896"
down_revision = "4ad25203924f"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "challenge_histories",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("challenge_id", sa.Integer(), nullable=True),
        sa.Column("timestamp", sa.DateTime(), nullable=True),
        sa.Column("old_status", sa.String(), nullable=True),
        sa.Column("new_status", sa.String(), nullable=True),
        sa.Column("version", sa.Integer(), nullable=True),
        sa.Column("changes", sa.JSON(), nullable=True),
        sa.Column("snapshot", sa.JSON(), nullable=True),
        sa.ForeignKeyConstraint(
            ["challenge_id"],
            ["challenges.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("challenge_histories", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_challenge_histories_id"), ["id"], unique=False
        )

    op.create_table(
        "task_histories",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("task_id", sa.Integer(), nullable=True),
        sa.Column("challenge_id", sa.Integer(), nullable=True),
        sa.Column("timestamp", sa.DateTime(), nullable=True),
        sa.Column("old_status", sa.String(), nullable=True),
        sa.Column("new_status", sa.String(), nullable=True),
        sa.Column("version", sa.Integer(), nullable=True),
        sa.Column("changes", sa.JSON(), nullable=True),
        sa.Column("snapshot", sa.JSON(), nullable=True),
        sa.ForeignKeyConstraint(
            ["task_id"],
            ["tasks.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("task_histories", schema=None) as batch_op:
        batch_op.create_index(batch_op.f("ix_task_histories_id"), ["id"], unique=False)

    with op.batch_alter_table("challenges", schema=None) as batch_op:
        batch_op.add_column(sa.Column("version", sa.Integer(), nullable=True))

    with op.batch_alter_table("tasks", schema=None) as batch_op:
        batch_op.add_column(sa.Column("version", sa.Integer(), nullable=True))

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("tasks", schema=None) as batch_op:
        batch_op.drop_column("version")

    with op.batch_alter_table("challenges", schema=None) as batch_op:
        batch_op.drop_column("version")

    with op.batch_alter_table("task_histories", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_task_histories_id"))

    op.drop_table("task_histories")
    with op.batch_alter_table("challenge_histories", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_challenge_histories_id"))

    op.drop_table("challenge_histories")
    # ### end Alembic commands ###
