# backend/BMC_API/src/domain/repositories/base_repository.py

from typing import Any, Dict, List, Optional, Protocol, TypeVar

TInput = TypeVar("TInput")
TOutput = TypeVar("TOutput")


class BaseRepositoryProtocol(Protocol[TInput, TOutput]):
    async def get(self, id: int) -> Optional[TOutput]: ...
    async def list(
        self,
        offset: int = 0,
        limit: int = 0,
        search_filters: Dict[str, Any] | None = None,
        output_filters: List[str] | None = None,
        sort_by: str | None = "id",
        sort_desc: bool | None = False,
    ) -> Optional[List[TOutput]]: ...
    async def create(self, obj: TInput) -> TOutput: ...
    async def update(self, id: int, obj: TInput) -> Optional[TOutput]: ...
    async def update_bulk(self, obj: List[TInput]) -> List[Optional[TOutput]]: ...
    async def delete(self, id: int) -> Optional[TOutput]: ...
    async def delete_bulk(self, id: List[int]) -> Optional[List[TOutput]]: ...
    async def check_ownership(self, user_id: int, model_id: int, model_id_field: str) -> bool: ...
