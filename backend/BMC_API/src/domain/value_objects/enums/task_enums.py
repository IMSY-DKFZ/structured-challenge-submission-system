### TASK ENUMS ###
### Adapted from old system, these are not used in backend anymore. They are controlled from frontend code ###

# from enum import Enum


# # Participation Policy
# # Validation Objective
# class FieldOfApplication(str, Enum):
#     Assistance = "Assistance"
#     CAD = "CAD"
#     CrossPhase = "CrossPhase"
#     DataReduction = "DataReduction"
#     DecisionSupport = "DecisionSupport"
#     Diagnosis = "Diagnosis"
#     Education = "Education"
#     InterventionFollowUp = "InterventionFollowUp"
#     InterventionPlanning = "InterventionPlanning"
#     LongitudinalStudy = "LongitudinalStudy"
#     MedicalDataManagement = "MedicalDataManagement"
#     Prevention = "Prevention"
#     Prognosis = "Prognosis"
#     Research = "Research"
#     Screening = "Screening"
#     Surgery = "Surgery"
#     Training = "Training"
#     TreatmentPlanning = "TreatmentPlanning"


# class TaskCategory(str, Enum):
#     Classification = "Classification"
#     Denoising = "Denoising"
#     Detection = "Detection"
#     Localization = "Localization"
#     Modeling = "Modeling"
#     Prediction = "Prediction"
#     Reconstruction = "Reconstruction"
#     Registration = "Registration"
#     Regression = "Regression"
#     Restoration = "Restoration"
#     Retrieval = "Retrieval"
#     Segmentation = "Segmentation"
#     Simulation = "Simulation"
#     Stitching = "Stitching"
#     Tracing = "Tracing"
#     Tracking = "Tracking"
#     Other = "Other"


# class AssessmentAim(str, Enum):
#     Accuracy = "Accuracy"
#     Applicability = "Applicability"
#     Complexity = "Complexity"
#     Consistency = "Consistency"
#     Ergonomics = "Ergonomics"
#     Feasibility = "Feasibility"
#     HardwareRequirements = "HardwareRequirements"
#     Interaction = "Interaction"
#     IntegrationInWorkflow = "IntegrationInWorkflow"
#     Precision = "Precision"
#     Reliability = "Reliability"
#     Robustness = "Robustness"
#     Runtime = "Runtime"
#     Sensitivity = "Sensitivity"
#     Specificity = "Specificity"
#     Usability = "Usability"
#     UserSatisfaction = "UserSatisfaction"


# # Study Conditions
# # Validation Datasets
# class CategoryOfTrainingDataGeneration(str, Enum):
#     NoTrainingDataRequired = "NoTrainingDataRequired"
#     CrowdSourcedAnnotations = "CrowdSourcedAnnotations"
#     GroundTruthFromSimulation = "GroundTruthFromSimulation"
#     HybridHumanAlgorithm = "HybridHumanAlgorithm"
#     ReferenceFromAlgorithm = "ReferenceFromAlgorithm"
#     ReferenceFromClinicalPractice = "ReferenceFromClinicalPractice"
#     ReferenceFromMutlipleHumanRaters = "ReferenceFromMutlipleHumanRaters"
#     ReferenceFromSingleHumanRater = "ReferenceFromSingleHumanRater"
#     Other = "Other"


# class AnnotationAggregationTraining(str, Enum):
#     NoTrainingData = "NoTrainingData"
#     NoAggregation = "NoAggregation"
#     AdditionalAnnotatorToResolveConflicts = "AdditionalAnnotatorToResolveConflicts"
#     Average = "Average"
#     LevelSetBasedApproachMaximizingTheAPosterioriProbability = (
#         "LevelSetBasedApproachMaximizingTheAPosterioriProbability"
#     )
#     MajorityVote = "MajorityVote"
#     SelectiveAndIterativeMethodForPerformanceLevelEstimation = (
#         "SelectiveAndIterativeMethodForPerformanceLevelEstimation"
#     )
#     SimultaneousTruthAndPerformanceLevelEstimation = (
#         "SimultaneousTruthAndPerformanceLevelEstimation"
#     )
#     StrictCombination = "StrictCombination"
#     Other = "Other"


# class CategoryOfReferenceGenerationMethod(str, Enum):
#     CrowdSourcedAnnotations = "CrowdSourcedAnnotations"
#     GroundTruthFromSimulation = "GroundTruthFromSimulation"
#     HybridHumanAlgorithm = "HybridHumanAlgorithm"
#     ReferenceFromAlgorithm = "ReferenceFromAlgorithm"
#     ReferenceFromClinicalPractice = "ReferenceFromClinicalPractice"
#     ReferenceFromMutlipleHumanRaters = "ReferenceFromMutlipleHumanRaters"
#     ReferenceFromSingleHumanRater = "ReferenceFromSingleHumanRater"
#     Other = "Other"


# class AnnotationAggregationTest(str, Enum):
#     NoAggregation = "NoAggregation"
#     AdditionalAnnotatorToResolveConflicts = "AdditionalAnnotatorToResolveConflicts"
#     Average = "Average"
#     LevelSetBasedApproachMaximizingTheAPosterioriProbability = (
#         "LevelSetBasedApproachMaximizingTheAPosterioriProbability"
#     )
#     MajorityVote = "MajorityVote"
#     SelectiveAndIterativeMethodForPerformanceLevelEstimation = (
#         "SelectiveAndIterativeMethodForPerformanceLevelEstimation"
#     )
#     SimultaneousTruthAndPerformanceLevelEstimation = (
#         "SimultaneousTruthAndPerformanceLevelEstimation"
#     )
#     StrictCombination = "StrictCombination"
#     Other = "Other"


# # Assessment Methods
# class InteractionLevelPolicy(str, Enum):
#     FullyAutomatic = "FullyAutomatic"
#     FullyInteractive = "FullyInteractive"
#     SemiAutomatic = "SemiAutomatic"


# class TargetCohort(str, Enum):
#     HealthyVolunteersScreening = "HealthyVolunteersScreening"
#     HealthyVolunteersRecruitedForCertainStudy = (
#         "HealthyVolunteersRecruitedForCertainStudy"
#     )
#     MenClinicalSuspicionHavingProstateCancer = (
#         "MenClinicalSuspicionHavingProstateCancer"
#     )
#     ORTeamDuringLiverTransplantation = "ORTeamDuringLiverTransplantation"
#     PatientsAbdominalCT = "PatientsAbdominalCT"
#     PatientsAttendingStateOfTheArtCardiacMRIDiagnosticCentre = (
#         "PatientsAttendingStateOfTheArtCardiacMRIDiagnosticCentre"
#     )
#     PatientsChemotherapy = "PatientsChemotherapy"
#     PatientsLaparosopicSurgery = "PatientsLaparosopicSurgery"
#     PatientsParticularDatabase = "PatientsParticularDatabase"
#     PatientsReferredForEarlyBarrettsEsophagusCancerWithoutVisibleAbnormalities = (
#         "PatientsReferredForEarlyBarrettsEsophagusCancerWithoutVisibleAbnormalities"
#     )
#     PhysiciansUseDaVinciSiForSurgicalTrainingInExVivoSetting = (
#         "PhysiciansUseDaVinciSiForSurgicalTrainingInExVivoSetting"
#     )
#     SpecificJournalsWithOncologyFocus = "SpecificJournalsWithOncologyFocus"
#     StandardizedCancerCellLines = "StandardizedCancerCellLines"
#     Other = "Other"


# class AlgorithmTarget(str, Enum):
#     Abdomen = "Abdomen"
#     AirwayTree = "AirwayTree"
#     AnaplasticOligoastrocytoma = "AnaplasticOligoastrocytoma"
#     Aorta = "Aorta"
#     BarretsEsophagus = "BarretsEsophagus"
#     BasalGanglia = "BasalGanglia"
#     BloodPool = "BloodPool"
#     Bone = "Bone"
#     Brain = "Brain"
#     Brainstem = "Brainstem"
#     Breast = "Breast"
#     CanineLeg = "CanineLeg"
#     CaudateNucleus = "CaudateNucleus"
#     Cell = "Cell"
#     Centroblasts = "Centroblasts"
#     CerebellarCortex = "CerebellarCortex"
#     Cerebellum = "Cerebellum"
#     CerebrospinalFluidInExtraCerebralSpace = "CerebrospinalFluidInExtraCerebralSpace"
#     CerebrospinalFluidInVentricles = "CerebrospinalFluidInVentricles"
#     Clavicles = "Clavicles"
#     ColorectalLiverMetastasis = "ColorectalLiverMetastasis"
#     CoronaryArtery = "CoronaryArtery"
#     CorticalGrayMatter = "CorticalGrayMatter"
#     CorticospinalTract = "CorticospinalTract"
#     Diencephalon = "Diencephalon"
#     Edema = "Edema"
#     Endocardium = "Endocardium"
#     Esophagus = "Esophagus"
#     FemoralCartilage = "FemoralCartilage"
#     Femur = "Femur"
#     Fetus = "Fetus"
#     FiberPathway = "FiberPathway"
#     Gallbladder = "Gallbladder"
#     Gland = "Gland"
#     Glioblastoma = "Glioblastoma"
#     GlioblastomaMultiform = "GlioblastomaMultiform"
#     Glioma = "Glioma"
#     Head = "Head"
#     HeadNeck = "HeadNeck"
#     Heart = "Heart"
#     HepatocellularCarcinoma = "HepatocellularCarcinoma"
#     Hippocampal = "Hippocampal"
#     HumanEpithelialTyp2Cells = "HumanEpithelialTyp2Cells"
#     InferioirVenaCava = "InferioirVenaCava"
#     IntervertebralDisc = "IntervertebralDisc"
#     Jawbone = "Jawbone"
#     LateralVentricles = "LateralVentricles"
#     LeftAdrenalGland = "LeftAdrenalGland"
#     LeftAtrium = "LeftAtrium"
#     LeftKidney = "LeftKidney"
#     LeftLung = "LeftLung"
#     LeftPsoasMajor = "LeftPsoasMajor"
#     LeftVentricle = "LeftVentricle"
#     Lesion = "Lesion"
#     Liver = "Liver"
#     Lobe = "Lobe"
#     LowGradeGlioma = "LowGradeGlioma"
#     Lung = "Lung"
#     Lumen = "Lumen"
#     LumbarVertebra = "LumbarVertebra"
#     LymphNode = "LymphNode"
#     Lymphocytes = "Lymphocytes"
#     Mandible = "Mandible"
#     Metastasis = "Metastasis"
#     Microaneurysm = "Microaneurysm"
#     MitoticCells = "MitoticCells"
#     Mucosa = "Mucosa"
#     MuscleBodyOdLeftRectusAbdominis = "MuscleBodyOdLeftRectusAbdominis"
#     MuscleBodyOdRightRectusAbdominis = "MuscleBodyOdRightRectusAbdominis"
#     MyelinatedWhiteMatter = "MyelinatedWhiteMatter"
#     Myocardium = "Myocardium"
#     Neocortex = "Neocortex"
#     Nerve = "Nerve"
#     Neurites = "Neurites"
#     Neuromuscular = "Neuromuscular"
#     Nodule = "Nodule"
#     Nuclei = "Nuclei"
#     Nurse = "Nurse"
#     OperatingRoom = "OperatingRoom"
#     Pancreas = "Pancreas"
#     Particle = "Particle"
#     PeripheralCerebrospinalFluid = "PeripheralCerebrospinalFluid"
#     Polyp = "Polyp"
#     PortalVeinsSplenicVeins = "PortalVeinsSplenicVeins"
#     PrimaryVisualCortex = "PrimaryVisualCortex"
#     Prostate = "Prostate"
#     PulmonaryArtery = "PulmonaryArtery"
#     PulmonaryEmbolism = "PulmonaryEmbolism"
#     PyramidalTract = "PyramidalTract"
#     Rectum = "Rectum"
#     RetinalCysts = "RetinalCysts"
#     RightAdrenalGland = "RightAdrenalGland"
#     RightKidney = "RightKidney"
#     RightLung = "RightLung"
#     RightPsoasMajor = "RightPsoasMajor"
#     RightVentricle = "RightVentricle"
#     RigidInstrument = "RigidInstrument"
#     RoboticInstrument = "RoboticInstrument"
#     Seizure = "Seizure"
#     SmallBowel = "SmallBowel"
#     SpecificCellType = "SpecificCellType"
#     SpecularReflections = "SpecularReflections"
#     Spleen = "Spleen"
#     Stenosis = "Stenosis"
#     StemCells = "StemCells"
#     Sternum = "Sternum"
#     Stomach = "Stomach"
#     Surgeon = "Surgeon"
#     Synapses = "Synapses"
#     ThyroidGland = "ThyroidGland"
#     Tibia = "Tibia"
#     TibialCartilage = "TibialCartilage"
#     ToolTip = "ToolTip"
#     ToothCaries = "ToothCaries"
#     ToothCrown = "ToothCrown"
#     ToothDentin = "ToothDentin"
#     ToothEnamel = "ToothEnamel"
#     ToothPulp = "ToothPulp"
#     ToothRestoration = "ToothRestoration"
#     ToothRootCanalTreatment = "ToothRootCanalTreatment"
#     Trachea = "Trachea"
#     Tumor = "Tumor"
#     UnmyelinatedWhiteMatter = "UnmyelinatedWhiteMatter"
#     UpperLimp = "UpperLimp"
#     UrinaryBladder = "UrinaryBladder"
#     Uterus = "Uterus"
#     Vertebrae = "Vertebrae"
#     Vessels = "Vessels"
#     WhiteMatter = "WhiteMatter"
#     WhiteMatterLesions = "WhiteMatterLesions"


# class DataOrigin(str, Enum):
#     Abdomen = "Abdomen"
#     AirwayTree = "AirwayTree"
#     Aorta = "Aorta"
#     BasalGanglia = "BasalGanglia"
#     BloodObtainedFromForearm = "BloodObtainedFromForearm"
#     Brain = "Brain"
#     Brainstem = "Brainstem"
#     Breast = "Breast"
#     CaudateNucleus = "CaudateNucleus"
#     Cell = "Cell"
#     Cerebellum = "Cerebellum"
#     CerebrospinalFluidInExtraCerebralSpace = "CerebrospinalFluidInExtraCerebralSpace"
#     CerebrospinalFluidInVentricles = "CerebrospinalFluidInVentricles"
#     Chest = "Chest"
#     Cervix = "Cervix"
#     Colon = "Colon"
#     CoronaryArtery = "CoronaryArtery"
#     Cortex = "Cortex"
#     CorticalGrayMatter = "CorticalGrayMatter"
#     Database = "Database"
#     Esophagus = "Esophagus"
#     Eye = "Eye"
#     Femur = "Femur"
#     Fetus = "Fetus"
#     Gallbladder = "Gallbladder"
#     GastricMetaplasia = "GastricMetaplasia"
#     GastrointestinalTract = "GastrointestinalTract"
#     Glioma = "Glioma"
#     Head = "Head"
#     Heart = "Heart"
#     InferiorVenaCava = "InferiorVenaCava"
#     Intestine = "Intestine"
#     LeftAdrenalGland = "LeftAdrenalGland"
#     LeftAtria = "LeftAtria"
#     LeftCorticospinalTract = "LeftCorticospinalTract"
#     LeftKnee = "LeftKnee"
#     LeftLung = "LeftLung"
#     LeftParotidGland = "LeftParotidGland"
#     LeftPsoasMajor = "LeftPsoasMajor"
#     LeftPyramidalTract = "LeftPyramidalTract"
#     LeftVentricle = "LeftVentricle"
#     Leg = "Leg"
#     Liver = "Liver"
#     Lobe = "Lobe"
#     LumbarVertebra = "LumbarVertebra"
#     Lung = "Lung"
#     LymphNode = "LymphNode"
#     Microaneurysm = "Microaneurysm"
#     Mouth = "Mouth"
#     MuscleBodyOdLeftRectusAbdominis = "MuscleBodyOdLeftRectusAbdominis"
#     MuscleBodyOdRightRectusAbdominis = "MuscleBodyOdRightRectusAbdominis"
#     MyelinatedWhiteMatter = "MyelinatedWhiteMatter"
#     Myocardium = "Myocardium"
#     Neck = "Neck"
#     Neoplasia = "Neoplasia"
#     Nodule = "Nodule"
#     Oropharynx = "Oropharynx"
#     Pancreas = "Pancreas"
#     Particle = "Particle"
#     PeritumoralArea = "PeritumoralArea"
#     Pharynx = "Pharynx"
#     PortalVeinsSplenicVeins = "PortalVeinsSplenicVeins"
#     Prostate = "Prostate"
#     PulmonaryArteries = "PulmonaryArteries"
#     PulmonaryEmbolism = "PulmonaryEmbolism"
#     PulmonaryVeins = "PulmonaryVeins"
#     Rectum = "Rectum"
#     RetinalCysts = "RetinalCysts"
#     RightAdrenalGland = "RightAdrenalGland"
#     RightAtria = "RightAtria"
#     RightCorticospinalTract = "RightCorticospinalTract"
#     RightKnee = "RightKnee"
#     RightLung = "RightLung"
#     RightParotidGland = "RightParotidGland"
#     RightPsoasMajor = "RightPsoasMajor"
#     RightPyramidalTract = "RightPyramidalTract"
#     RightVentricle = "RightVentricle"
#     SpecificJournal = "SpecificJournal"
#     Skin = "Skin"
#     SmallBowel = "SmallBowel"
#     Spine = "Spine"
#     Spleen = "Spleen"
#     Sternum = "Sternum"
#     Substrate = "Substrate"
#     SuperiorVenaCava = "SuperiorVenaCava"
#     Synapses = "Synapses"
#     Thorax = "Thorax"
#     Thyroid = "Thyroid"
#     Trachea = "Trachea"
#     UrinaryBladder = "UrinaryBladder"
#     UnmyelinatedWhiteMatter = "UnmyelinatedWhiteMatter"
#     Uterus = "Uterus"
#     VesselInnerWall = "VesselInnerWall"
#     VesselOuterWall = "VesselOuterWall"
#     Vessels = "Vessels"
#     WholeBody = "WholeBody"
#     WholeOperatingRoom = "WholeOperatingRoom"


# class ValidationCohort(str, Enum):
#     CatModel = "CatModel"
#     DogModel = "DogModel"
#     DrosophilaModel = "DrosophilaModel"
#     HealthyVolunteers = "HealthyVolunteers"
#     InSilico = "InSilico"
#     MouseModel = "MouseModel"
#     OvineModel = "OvineModel"
#     PatientsInClinicalRoutine = "PatientsInClinicalRoutine"
#     PatientsUnderControlledConditions = "PatientsUnderControlledConditions"
#     PhysicalPhantom = "PhysicalPhantom"
#     PorcineLiver = "PorcineLiver"
#     PorcineModel = "PorcineModel"
#     RatModel = "RatModel"
#     SpecificMouseModel = "SpecificMouseModel"


# class ImagingModalities(str, Enum):
#     ComputedTomography = "ComputedTomography"
#     Electrocardiography = "Electrocardiography"
#     Electroencephalography = "Electroencephalography"
#     ElectronMicroscopy = "ElectronMicroscopy"
#     Electromyography = "Electromyography"
#     Endomicroscopy = "Endomicroscopy"
#     EndoscopicImaging = "EndoscopicImaging"
#     Fluoroscopy = "Fluoroscopy"
#     IntravascularUltrasound = "IntravascularUltrasound"
#     LightMicroscopy = "LightMicroscopy"
#     MagneticResonanceImaging = "MagneticResonanceImaging"
#     OpticalCoherenceTomography = "OpticalCoherenceTomography"
#     PhotoacusticTomography = "PhotoacusticTomography"
#     Photograph = "Photograph"
#     PositronEmissionTomography = "PositronEmissionTomography"
#     SinglePhotonEmissionComputedTomography = "SinglePhotonEmissionComputedTomography"
#     Thermography = "Thermography"
#     Ultrasound = "Ultrasound"
#     Ultrasound3D = "Ultrasound3D"
#     Video = "Video"
#     XRay = "XRay"


# class ContextInformation(str, Enum):
#     NoAdditionalInformation = "NoAdditionalInformation"
#     Age = "Age"
#     BMI = "BMI"
#     BodyHeight = "BodyHeight"
#     CancerStage = "CancerStage"
#     CancerType = "CancerType"
#     ClinicalDiagnoses = "ClinicalDiagnoses"
#     ClinicalHistory = "ClinicalHistory"
#     ClinicalTreatmentDetails = "ClinicalTreatmentDetails"
#     DiseaseStage = "DiseaseStage"
#     FreeTextLikeRadiologyReport = "FreeTextLikeRadiologyReport"
#     Gender = "Gender"
#     GeneticInformation = "GeneticInformation"
#     LabData = "LabData"
#     MedicalRecord = "MedicalRecord"
#     Pathology = "Pathology"
#     PatientNumber = "PatientNumber"
#     ORDeviceData = "ORDeviceData"
#     Race = "Race"
#     SmokingStatus = "SmokingStatus"
#     Weight = "Weight"


# # How to deal with sth like 80% training data, 20% test?
# class DistributionOfTrainingAndTestData(str, Enum):
#     RandomlyDistributed = "RandomlyDistributed"
#     BalancedFalseAndNegativeCases = "BalancedFalseAndNegativeCases"


# # How to deal with years of experience?
# class AnnotatorsOfTrainingData(str, Enum):
#     AlgorithmXY = "AlgorithmXY"
#     Crowd = "Crowd"
#     EngineerWhoDevelopedSoftware = "EngineerWhoDevelopedSoftware"
#     PostgraduatePhysician = "PostgraduatePhysician"
#     Surgeon = "Surgeon"
#     UndergraduatePhysician = "UndergraduatePhysician"


# class TrainingDataPolicy(str, Enum):
#     NoPolicy = "NoPolicy"
#     DockerContainer = "DockerContainer"
#     NoAdditionalData = "NoAdditionalData"
#     PrivateData = "PrivateData"
#     PubliclyAvailableData = "PubliclyAvailableData"
#     Other = "Other"


# class ResultSubmissionPolicy(str, Enum):
#     API = "API"
#     Cloud = "Cloud"
#     Docker = "Docker"
#     Evaluation_Platform = "Evaluation_Platform"
#     Upload_Whole_Code = "Upload_Whole_Code"
#     Upload_Executable = "Upload_Executable"
#     Send_Algorithm_Output_To_Organizers = "Send_Algorithm_Output_To_Organizers"
#     Send_Code_Manually = "Send_Code_Manually"
#     Send_Executable_Manually = "Send_Executable_Manually"
#     Other = "Other"


# class OrganizerParticipationPolicy(str, Enum):
#     MayNotParticipate = "MayNotParticipate"
#     MayParticipateButNotEligibleForAwardsAndNotListedInLeaderboard = (
#         "MayParticipateButNotEligibleForAwardsAndNotListedInLeaderboard"
#     )
#     Other = "Other"


# # How to deal with years of experience?
# class AnnotatorsOfTestData(str, Enum):
#     AlgorithmXY = "AlgorithmXY"
#     Crowd = "Crowd"
#     EngineerWhoDevelopedSoftware = "EngineerWhoDevelopedSoftware"
#     PostgraduatePhysician = "PostgraduatePhysician"
#     Surgeon = "Surgeon"
#     UndergraduatePhysician = "UndergraduatePhysician"


# class AnnotationPolicyForTestCases(str, Enum):
#     AnnotationInstructions = "AnnotationInstructions"
#     BoundaryWithSafetyZone = "BoundaryWithSafetyZone"
#     ConsistentTerminology = "ConsistentTerminology"
#     DescriptionOfSteps = "DescriptionOfSteps"
#     RegionOfBiopsy = "RegionOfBiopsy"
#     ResectedTissue = "ResectedTissue"
#     URLToAnnotationInstructions = "URLToAnnotationInstructions"
